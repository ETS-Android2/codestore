Quelle: http://www.exp-media.com/content/extending-gimp-python-python-fu-plugins-part-2
API: http://www.gimp.org/docs/python/

- den python-Editor IDLE installieren
- ein Script unter /home/<user>/.gimp-2.8/plug-ins anlegen
- das Script ausführbar machen
- Nutzfunktion deklarieren und bei Gimp registrieren (siehe Vorlage)
- Gimp neu starten (wird nur die Nutzfunktion modifiziert, so muss Gimp nicht neu gestartet werden)
- die Nutzfunktion kann in Gimp unter Filter->Python-Fu->Console->Browse recherchiert werden
- die Unterstriche der Nutzfunktion werden nach der Registrierung durch Bindestriche ersetzt
- nach der der Registrierung bekommt die Nutzfunktion das Präfix python-fu-...
- das Script kann im registrierten Menüeintrag ausgeführt werden
- der siebte Registrierungsparameter kann mit diesen Werten starten: <Toolbox>", "<Image>", "<Layers>", "<Channels>", "<Vectors>", "<Colormap>", "<Load>", "<Save>", "<Brushes>", "<Gradients>", "<Palettes>", "<Patterns>" or "<Buffers>
- der achte Parameter kann die folgenden Bildtypen enthalten: "*", "RGB", "RGBA", "GRAY", or "INDEXED" (die können auch als Kommasaparierte Liste angegeben werden)
- der Scriptbutton bleibt ausgegraut, wenn man ein Farbbild läd, obwohl nur Graustufen unterstützt werden
- bei einer leeren Parameterliste werden automatisch 3 Parameter von Gimp definiert
  - 1. run mode (der nicht interaktive run mode ist für automatisierte Bildverarbeitung wichtig)
  - 2. das aktuelle Bild
  - 3. die ausgewählte Ebene
- gibt man im Registrierungsparameter 7 <Toolbox> an, dann hat die Nutzfunktion nur einen run mode Parameter
  - die die Funktion braucht dann kein Bild um ausgeführt werden zu können (sie könnte aber ein Bild erzeugen)
- die Typen der selbst definierten Parameter können Primitive sein oder Gimpobjekte
- im Interaktiven Modus erzeugt Gimp für selbstdefinierte Parameter eine Eingabemaske
- die Nutzfunktion kann mehrere Rückgabewerte liefern, von denen jeder diese Form hat (type, name, description)
- die Rückgabewerte werden nie von Gimp ausgewertet (nur andere Scripte tun das)
- werden eigene Parameter in der Nutzfunktion gebraucht, dann müssen im Fall von <Image> die letzten beiden Parameter, die vormals automatisch hinzugefügt wurden als Parameter in die Nutzfunktion eingetragen werden (siehe Vorlage)
- die Funktion pdb.gimp_message schreibt Text in die Error-Konsole (Fenster->Andockbare Dialoge->Fehlerausgabe)
- in der Python-Fu-Konsole gibt das die Farbe eines Pixels aus: pdb.gimp_drawable_get_pixel(gimp.image_list()[0].active_layer, 10, 10)
- in der Python-Fu-Funktions-Recherche kann man auf Anwenden klicken um eine Funktion interaktiv zu testen
- um den Typ einer Referenz zu ermitteln, kann type(variable) verwendet werden
- der Bildmodus wird unter Bild->Mode eingestellt (Indeziert bedeutet mit Farbpaletten)
- der Alpha-Kanal kann von Ebene zu Ebene unterschiedlich sein (er wird im Ebenenmenü hinzugefügt und entfernt)
- fragt man auf einem Gimp-Objekt unbekannten Typs das Attribut Wurst an, dann gibt Gimp den Typnamen des Objekts aus (als Teil einer Fehlermeldung)
- die vier Zahlenparameter für PF_SPINNER und PF_SLIDER sind wie folgt zu verstehen:
  - 1. initialer Wert
  - 2. unterer Grenzwert
  - 3. oberer Grenzwert
  - 4. Schrittlänge (1 wären Einerschritte)
- pdb.gimp_message(dir(color)) gibt einige Funktionsnamen aus, die für PF_COLOR definiert sind (geht mit allen Python-Objekten)
