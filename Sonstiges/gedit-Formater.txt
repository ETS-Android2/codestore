Quelle: http://www.connorgarvey.com/blog/?p=264#codesyntax_1

JSON-Formater

    Click Edit -> Preferences
    Select the Plugins tab
    Check the box next to External Tools
    Click Close
    Click Tools -> Manage External Tools…
    Click New (bottom left, looks like a piece of paper with a plus sign)
    Enter a name (Format JSON)
    Paste this text into the text window on the right
    
    #! /usr/bin/env python
    import json
    import sys
    j = json.load(sys.stdin)
    print json.dumps(j, sort_keys=True, indent=2)
    
    Set Input to Current document
    Set Output to Replace current document
    
XML-Formater

    Install lxml (on Ubuntu, sudo apt-get install python-lxml)
        Python’s included XML modules either don’t support pretty printing or are buggy
    Create a new external tool configuration as above (Format XML)
    Paste this text into the text window on the right
    
    #! /usr/bin/env python
    import sys
    import lxml.etree as etree
    import traceback
    result = ''
    for line in sys.stdin:
      result += line
    try:
      x = etree.fromstring(result)
      result = etree.tostring(x, pretty_print=True)
    except:
      etype, evalue, etraceback = sys.exc_info()
      traceback.print_exception(etype, evalue, etraceback, file=sys.stderr)
    print result
    
    Set Input to Current document
    Set Output to Replace current document
    
Markdown-Compiler

#!/bin/sh
sed -e "s/ü/\&uuml;/g" "$PLUMA_CURRENT_DOCUMENT_PATH" | \
sed -e "s/ä/\&auml;/g"  | \
sed -e "s/ö/\&ouml;/g"  | \
sed -e "s/Ä/\&Auml;/g"  | \
sed -e "s/Ö/\&Ouml;/g"  | \
sed -e "s/Ü/\&Uuml;/g"  | \
sed -e "s/ß/\&szlig;/g" | \
markdown > "$PLUMA_CURRENT_DOCUMENT_PATH.html"

XML comment and uncomment

    #!/bin/sh

    # Tastenkürzel: <Primary><Shift>c
    # Eingabe: Momentan ausgewählter Text
    # Ausgabe: Momentan ausgewählten Text ersetzen
    
    alterLine()
    {
        LINE="<!-- $LINE -->"
        # for uncomment use
        # LINE=`echo "$LINE" | sed -e "s/<!-- //"`
        # LINE=`echo "$LINE" | sed -e "s/ -->//"`
    }
    
    IFS=''
    FIRST_LINE=true
    while  read -r LINE || [ -n "$LINE" ]; do
    	alterLine
    	if $FIRST_LINE ; then
    		echo -n "$LINE"
    		FIRST_LINE=false
    	else
    		echo -n "\n$LINE"
    	fi
    done
