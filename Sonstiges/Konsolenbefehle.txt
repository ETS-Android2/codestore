# ISO/IMG Dateien ins Dateisystem einbinden
mount -o loop disk.iso /mnt/

# ISO Daten aus dem Dateisystem entfernen
umount /folder/as/mountpoint

# ISO von CDs erstellen
cat /dev/cdrom > image.iso

# Daten in eine ISO-Datei schreiben
genisoimage -J -o daten2.iso -R  Delphi7_Personal.zip

# Diskettenimages erstellen (letzter Parameter ist die Größe in Kilo-Byte)
mkfs.msdos -C imagefile.img 1440

# genaue Informationen (-F) über Prozess ddclient anzeigen (grep -n gibt Zeilennummern mit aus)
ps -A -F | grep -i "ddclient"

# Suchen
find -name "*.deb" -o -name "*.rpm"

# nach Dateien suchen, die "Something" beinhalten
find -exec grep -l "Something" '{}' \;

# Senden
tar -c Folder/ | gzip | nc -q0 169.254.154.61 17176 (Verzeichnis komprimiert)
nc -q0 169.254.154.61 17176 < anFile.txt (Datei unkomprimiert)

# Empfangen
nc -lp 17176 | gunzip | tar -x (Verzeichnis komprimiert)
nc -lp 17176 > otherFile.txt (Datei unkomprimiert)

# Video zu MP3 konvertieren
mencoder input.mp4 -ovc frameno -oac mp3lame -of rawaudio -lameopts cbr:br=128 -o output.mp3

# Audiokonfiguration
alsamixer -c0

# Festplatten-Images einhängen
sudo mount -t ntfs -o loop,offset=33280,umask=000 Windows.vdi /mnt/

# Dateien zusammenführen
cat file1 file2 > ziel.tar.gz [oder] cat xa* > ziel.tar.gz

# Dateien spalten
split -b 1945k quelle.tar.gz

# Prozess mit Aufrufparametern und Laufzeit
ps -A -C java -F

# Verzeichnismapping
mount --bind /home/user/Desktop/real/ /mnt

# Passwort von calle ändern
sudo passwd calle

# WMV to AVI
mencoder infile.wmv -ofps 23.976 -ovc lavc -oac copy -o outfile.avi

# Grub reparieren (von Live-CD, Boot-Flag setzen)
sudo grub-install --root-directory=/media/Ubuntu/ hd0,2

# Portlauschen anzeigen
lsof -i:17000

# Dingoo mounten
sudo mount /dev/sdc /mnt -t vfat

# mkv2avi
mencoder film.mkv -vf scale=850:368 -oac mp3lame -lameopts abr:br=128 -alang ger -ovc lavc -ni -lavcopts vcodec=mpeg4:vbitrate=1600:mbd=1:v4mv:trell:vpass=1 -ffourcc DX50 -o film.avi

# verschlüsselte Partition einhängen
cryptsetup luksOpen /dev/sda2 Ubuntu
mount /dev/mapper/Ubuntu /media/Ubuntu

# alle Schlüssel einer verschlüsselten Partition anzeigen
sudo cryptsetup luksDump /dev/sda6

# Schlüssel zur verschlüsselten Partition hinzufügen
sudo cryptsetup luksAddKey /dev/sda6

# Schlüssel von einer verschlüsselten Partition entfernen (zu löschendes Passwort wird abgefragt)
sudo cryptsetup luksRemoveKey /dev/sda6

# VDI-UUID setzen
VBoxManage internalcommands sethduuid Swap2.vdi

# Prozess per ID pausieren
kill -STOP 24997

# pausierten Prozess weiterlaufen lassen
kill -CONT 24997

# WebDAV-Verzeichnis einhängen (erfordert davfs2)
sudo mount -t davfs https://storage.driveonweb.de/probdav /Mountpunkt

# Besitzer und Gruppe eines Ordners rekursiv ändern
sudo chown -R user:group /folder

# PDF To PNG
convert -flatten +matte -density 400 IMG_0003.pdf IMG_0003.png

# Textausgabe
zenity --info --text "HUHU"

# Befehle verketten
T="Ofen ausschalten" ; sleep $((60*60*2)) ; zenity --info --text "$T" ; 

# Notification einblenden (für 10 Minuten)
notify-send -t $((1000*60*10)) "Ofen ausschalten"

# Sprachausgabe von Text (-s 100 lässt ihn ein wenig langsamer sprechen default ist 175)
espeak -vde -s 100 "Ofen ausschalten"

# zwei Stunden verzögerte Erinnerung
T="Ofen ausschalten" ; sleep $((60*60*2)) ; notify-send -t $((1000*60*10)) "$T" ; espeak -vde -s 100 "$T"

# Bildfolge zu Video (für Blender-Animation)
mencoder "mf://*.png" -mf fps=25 -o test.avi -ovc lavc -lavcopts vcodec=msmpeg4v2:vbitrate=800

# Bildfolge zu GIF-Animation (delay 4 entspricht 40 Millisekunden)
convert -delay 4 *.png file.gif

# Script debuggen (zeigt Befehle mit Aufrufparametern an)
bash -x scriptName.sh

# so hier dumpen und dann mit Wireshark laden (Filter: http matches ".*")
sudo dumpcap -i lo -w ~/Arbeitsfläche/dump.trace

# Erzeugen einer Passwortdatei für Mongoose
./mongoose -A /tmp/passwdfile <realm> <username> <pwd>

# Hochladen einer Datei auf einen Mongoose-Server (Dateipipe sorgt für Statusanzeige im Terminal)
curl --digest --user <username>:<pwd> --upload-file <file> http://localhost:8080 > out.txt

# curl mit 1 MB/s Transferrate
curl --digest --user <user>:<pwd> --limit-rate 1m --upload-file <file> http://localhost:8080 > /dev/null

# Prozess pausieren (gibt eine Nummer aus [1], die man zum fortfahren braucht)
# http://wiki.ubuntuusers.de/Shell/Prozesssteuerung
Strg + z

# führt einen pausierten Prozess im Vordergrund wieder aus (Prozess mit Nummer 1)
fg %1

# führt einen pausierten Prozess im Hintergrund wieder aus (Prozess mit Nummer 1)
bg %1

# MD5-Hash bilden
echo -n 'password' | md5sum

# nur gelistete Dateien eines Verzeichnisses kopieren
cp -v -r -d /src/+(fso1|fso2|fso3) /dest
-> v=Fortschritt; r=Rekursiv; d=Verknüpfungen nur kopieren, aber nicht folgen

# Festplattenkapazität anzeigen
discus

# Prozessorauslastung anzeigen
top

# Base64 dekodieren
echo `echo QWxhZGRpbjpvcGVuIHNlc2FtZQ== | base64 -d`

# Base64 kodieren
echo `echo -n Aladdin:open sesame | base64 -w0`

# Prozess zu einem Port herausfinden
netstat -a -n -o (unter Windows; liefert PID, die im Taskmanager zugeordnet werden muss)
netstat -l -p    (unter Linux)

# Dateisystem über SSH einhängen (aushängen mit umount)
sshfs user@host:/ /mnt/

# einen Webserver mit python starten
python -m SimpleHTTPServer 8081
python3 -m http.server 8081

# zufällige UUI erzeugen
uuidgen

# SVG nach PNG
inkscape img.svg --export-png=img.png --export-dpi=90

# Datei gefüllt mit Nullen erzeugen (bs = Blockgröße; count = Anzahl der Blöcke)
dd if=/dev/zero of=my_fs bs=1024 count=30720

# Datei als Laufwerk einhängen
losetup /dev/loop0 my_fs

# prüfen, ob loop device belegt ist (0 bis 8)
losetup /dev/loop0

# Datei von loop device lösen
losetup -d /dev/loop0

# Dateisystem auf einem Gerät erzeugen
mkfs -t ext4 -m 1 -v /dev/loop0

# Prozessortemperatur anzeigen (erfordert lm-sensors)
sudo sensors-detect # einmalig absetzen und den Anweisungen folgen
sensors

# Bilddruck über USB ermöglichen
convert -interlace none img.png img.jpg

# IP eines Systems ermitteln
ip route
