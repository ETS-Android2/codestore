Serversteuerung mit:
sudo service apache2 start|stop|restart
sudo service ajaxterm start|stop|restart

aktivierte Module anzeigen:
apachectl -t -D DUMP_MODULES

Module installieren:
libapache2-mod-proxy-html & libapache2-mod-gnutls

Module aktivieren:
sudo a2enmod ssl
sudo a2enmod proxy
sudo a2enmod proxy_html
sudo a2enmod proxy_http

jetzt kann der Server nicht mehr gestartet werden:

calle@calle-pc:~$ sudo service apache2 start
 * Starting web server apache2
apache2: Syntax error on line 210 of /etc/apache2/apache2.conf: Syntax error on line 1 of /etc/apache2/mods-enabled/proxy_html.load: Cannot load /usr/lib/libxml2.so.2 into server: /usr/lib/libxml2.so.2: cannot open shared object file: No such file or directory
Action 'start' failed.
The Apache error log may have more information.

das System nach libxml2 durchsuchen und eine Verküpfung erstellen:
/usr/lib/libxml2.so.2

startet immer noch nicht:
 * Starting web server apache2
 apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName
httpd (pid 1064) already running

um das zu lösen muss man in die /etc/apache2/httpd.conf das hier eintragen:
ServerName localhost
(die /etc/apache2/httpd.conf wird nur Includiert, man kann es auch direkt in die /etc/apache2/apache2.conf eintragen)

jetzt startet er wieder!

Zertifikat erzeugen als root mit:
mkdir -p /etc/apache2/ssl
openssl req -new -x509 -days 3650 -nodes -out /etc/apache2/ssl/apache.pem -keyout /etc/apache2/ssl/apache.pem
ln -sf /etc/apache2/ssl/apache.pem /etc/apache2/ssl/`/usr/bin/openssl x509 -noout -hash < /etc/apache2/ssl/apache.pem`.0
chmod 600 /etc/apache2/ssl/apache.pem

SSH aktivieren in der /etc/apache2/ports.conf mit
<IfModule mod_ssl.c>
    Listen 443
</IfModule>
(die /etc/apache2/ports.conf ist nur Includiert, das kann direkt in der /etc/apache2/apache2.conf gemacht werden)

ajaxterm installieren

in die /etc/hosts muss eine Zeile eingetragen werden:
"127.0.0.1   localhost   calle-pc"

in der /etc/default/ajaxterm müssen PORT und SERVERPORT einkommentiert werden

ganz unten in der /etc/apache2/apache2.conf muss dieser Host konfiguriert werden:
<virtualhost *:443>
        DocumentRoot /var/www
        SSLEngine On
        SSLCertificateFile /etc/apache2/ssl/apache.pem
        ProxyRequests Off
        <Proxy *>
                Order Deny,allow
                Allow from all
        </Proxy>
        ProxyPass /ajaxterm/ http://localhost:8022/
        ProxyPassReverse /ajaxterm/ http://localhost:8022/
        ProxyPass /mongoose/ http://localhost:8081/
        ProxyPassReverse /mongoose/ http://localhost:8081/
</virtualhost>

Link für die Homepage:
<div onclick="window.open('https://' + window.location.hostname + '/ajaxterm/')" style="color:blue;text-decoration:underline;cursor:pointer">ajaxterm</div>

zum deaktivieren des Autostarts:
sudo update-rc.d -f ajaxterm remove
sudo update-rc.d -f apache2 remove

zum aktivieren des Autostarts:
sudo update-rc.d apache2 defaults

Ein Script /etc/init.d/ajaxterm_restart anlegen und ausführbar machen

#! /bin/sh
### BEGIN INIT INFO
# Provides:          Was macht das Skript?
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Kurze Beschreibung
# Description:       Längere Bechreibung
### END INIT INFO
# Author: Name <email@domain.tld>
# Aktionen
case "$1" in
    start)
        nohup /home/calle/Arbeitsfläche/wait &
        ;;
    stop)
        ;;
    restart)
        :
        ;;
esac
exit 0

BUM - Boot-Up-Manager installieren und darin das ajaxterm_restart aktivieren

Anschließend ein Script /home/calle/Arbeitsfläche/wait anlegen und ausführbar machen:
while true ; do
   if [ -f "/home/calle/Arbeitsfläche/stop" ]; then
      rm /home/calle/Arbeitsfläche/stop
      exit 0
   fi
   if [ -f "/home/calle/Arbeitsfläche/ajaxterm_restart" ]; then
      rm /home/calle/Arbeitsfläche/ajaxterm_restart
      service ajaxterm restart &
   fi
   if [ -f "/home/calle/Arbeitsfläche/ajaxterm_start" ]; then
      rm /home/calle/Arbeitsfläche/ajaxterm_start
      service ajaxterm start &
   fi
   if [ -f "/home/calle/Arbeitsfläche/ajaxterm_stop" ]; then
      rm /home/calle/Arbeitsfläche/ajaxterm_stop
      service ajaxterm stop &
   fi
   sleep 2
done

Dann eine /home/calle/www/ajaxterm_controller.php anlegen:
<?php
   if ($_GET['action'] == "restart")
      shell_exec('touch /home/calle/www/ajaxterm_restart');
   if ($_GET['action'] == "start")
      shell_exec('touch /home/calle/www/ajaxterm_start');
   if ($_GET['action'] == "stop")
      shell_exec('touch /home/calle/www/ajaxterm_stop');
   $referer = $_SERVER['HTTP_REFERER'];
   header("Location: $referer");
?>

Links für die Hauptseite würde jetzt so aussehen:
<span onclick="window.open('https://' + window.location.hostname + '/ajaxterm/')" style="color:blue;text-decoration:underline;cursor:pointer">ajaxterm</span>&nbsp;&nbsp;&nbsp;&nbsp;(
<span onclick="window.location='https://' + window.location.hostname + '/ajaxterm_controller.php?action=restart'" style="color:blue;text-decoration:underline;cursor:pointer">restart</span>
<span onclick="window.location='https://' + window.location.hostname + '/ajaxterm_controller.php?action=start'" style="color:blue;text-decoration:underline;cursor:pointer">start</span>
<span onclick="window.location='https://' + window.location.hostname + '/ajaxterm_controller.php?action=stop'" style="color:blue;text-decoration:underline;cursor:pointer">stop</span>)
